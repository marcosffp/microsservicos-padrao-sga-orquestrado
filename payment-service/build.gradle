plugins {
    id 'org.springframework.boot' version '3.5.3' // Atualizado para versão estável mais recente
    id 'io.spring.dependency-management' version '1.1.4' // Versão atualizada do plugin
    id 'java'
    id 'jacoco' // Opcional: para relatórios de cobertura de testes
}

group = 'br.com.microservices.orchestrated'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21) // Configuração moderna para Java 21
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

// Dependências do Jackson para manipulação de JSON
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'
    
    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    
    // DevTools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    
    // PostgreSQL
    runtimeOnly 'org.postgresql:postgresql:42.7.3' // Versão explícita recomendada
    
    // Spring Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Testes
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:postgresql:1.19.7' // Opcional para testes com containers
    
    // Documentação API (recomendado)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // Opcional: gera relatório de cobertura
}

// Opcional: Configuração do Jacoco para relatórios de cobertura
tasks.named('jacocoTestReport') {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}