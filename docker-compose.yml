services:
  order-db:
    image: mongo:latest
    container_name: order-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - 27018:27017


  product-db:
    image: postgres:latest
    container_name: product-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=product-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5433:5432"

  payment-db:
    image: postgres:latest
    container_name: payment-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=payment-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5434:5432"

  inventory-db:
    image: postgres:latest
    container_name: inventory-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=inventory-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5435:5432"
      

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
     - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://host.docker.internal:9092
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - orchestrator-saga

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8081:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=host.docker.internal:9092
    depends_on:
      - kafka
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - orchestrator-saga

# Microservices
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "3000:3000"
    environment:
      - KAFKA_BROKER=kafka:9092
      - MONGO_DB_URI=mongodb://admin:123456@order-db:27017
    depends_on:
      - order-db
      - kafka
    networks:
      - orchestrator-saga

  product-validation-service:
    build:
      context: ./product-validation-service
      dockerfile: Dockerfile
    container_name: product-validation-service
    ports:
      - "8090:8090"
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=product-db
      - DB_PORT=5433
      - DB_NAME=product-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - product-db
      - kafka
    networks:
      - orchestrator-saga

  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8091:8091"
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=payment-db
      - DB_PORT=5434
      - DB_NAME=payment-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - payment-db
      - kafka
    networks:
      - orchestrator-saga

  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    container_name: inventory-service
    ports:
      - "8092:8092"
    environment:
      - KAFKA_BROKER=kafka:9092
      - DB_HOST=inventory-db
      - DB_PORT=5435
      - DB_NAME=inventory-db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
    depends_on:
      - inventory-db
      - kafka
    networks:
      - orchestrator-saga

  orchestrator-service:
    build:
      context: ./orchestrator-service
      dockerfile: Dockerfile
    container_name: orchestrator-service
    ports:
      - "8080:8080"
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka
    networks:
      - orchestrator-saga

networks:
  orchestrator-saga:
    driver: bridge